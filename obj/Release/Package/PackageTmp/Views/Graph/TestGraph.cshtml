@model IEnumerable<PSAPLCDashboard.Web.Dashboard.Models.ChartData>

@{
    ViewBag.Title = "TestGraph";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<div style="display:flex;flex-direction:row;margin:30px;">
    <input type="datetime-local" id="fromdate" style="margin:1em" />
    <input type="datetime-local" id="todate" style="margin:1em" />
    <input type="number" id="increment" style="margin:1em" />
    <button style="margin:1em" onclick="OnBtnClick()">V I E W</button>
</div>
<div style="width:auto;height:auto;overflow:auto;">
    <canvas id="myChart" height="350" width="3600"></canvas>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>



    const ctx = document.getElementById('myChart');


    function OnBtnClick() {
        const fromDate = document.getElementById('fromdate').value;
        const toDate = document.getElementById('todate').value;
        const Increment = document.getElementById('increment').value;

        debugger;
        const timeLine = generateTimeline(fromDate, toDate, 60);


        let lineChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: timeLine,
                datasets: [
                    {
                        borderColor:'red',
                        label: "MaxDemand",
                        data: [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 18, 19, 20, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15]
                    },
                    {
                        borderColor: 'pink',
                        label: "PowerFactor",
                        data: [0, 11, 12, 13, 14, 19, 20, 1, 2, 3, 4, 5, 6, 7, 8, 15, 16, 17, 18, 9, 10, 14, 15, 16, 17]
                    }
                ]
            }
        });
    }


    function generateTimeline(startTime, endTime, increment) {
        const timeline = [];
        let currentTime = new Date(startTime);
        let endTimes = new Date(endTime);
        while (currentTime <= endTimes) {
            let year = currentTime.getFullYear();
            let month = (currentTime.getMonth() + 1).toString().padStart(2, '0'); // Months are 0-indexed
            let day = currentTime.getDate().toString().padStart(2, '0');
            let hours = currentTime.getHours().toString().padStart(2, '0');
            let minutes = currentTime.getMinutes().toString().padStart(2, '0');
            timeline.push(`${day}/${month}/${year} ${hours}:${minutes}`);
            currentTime.setMinutes(currentTime.getMinutes() + increment);
        }

        return timeline;
    }
</script>